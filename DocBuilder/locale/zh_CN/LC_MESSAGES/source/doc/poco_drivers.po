# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, NetEase Co, Ltd.
# This file is distributed under the same license as the poco package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: poco \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-07 11:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/doc/poco_drivers.rst:3
msgid "Poco drivers (engine specific poco implementation)"
msgstr ""

#: ../../source/doc/poco_drivers.rst:5
msgid ""
"For different engines please initialize ``poco`` instance by "
"corresponding driver. Here are API reference of different drivers."
msgstr "不同的游戏引擎或app平台需要使用对应的driver去实例化poco对象。对应的API参考如下。"

#: ../../source/doc/poco_drivers.rst:8
msgid "`Unity3D`_"
msgstr ""

#: ../../source/doc/poco_drivers.rst:9
msgid "`android-native`_"
msgstr ""

#: ../../source/doc/poco_drivers.rst:10
msgid "`cocos2dx-js`_"
msgstr ""

#: ../../source/doc/poco_drivers.rst:11
msgid "`NetEase Internal Engines`_"
msgstr ""

#: ../../source/doc/poco_drivers.rst:13
msgid ""
"Following example shows how to initialize poco instance for Unity3D. "
"Remember to connect an Android device to your PC/mac with a running game "
"or launch and keep the Unity game active on PC/mac."
msgstr "下面例子展示如何实例化poco对象来控制Unity3D游戏的UI对象。记得先连上一个android手机并打开 **ADB调试模式** 。"

#: ../../source/doc/poco_drivers.rst:32
msgid ""
"If multiple devices connected, please select one by invoking "
"``connect_device`` from airtest API."
msgstr "如果连接了多个手机，调用airtest API里的 ``connect_device`` 函数来选其中一个。"

#: ../../source/doc/poco_drivers.rst:43
msgid "For other engines, refer to `Integration guide`_ for more details"
msgstr "除了以上列出的引擎driver，其他的请参见 `Integration guide`_ 。"

#: ../../source/doc/poco_drivers.rst:46
msgid "Device object"
msgstr ""

#: ../../source/doc/poco_drivers.rst:48
msgid ""
"``Device`` is an abstract object which game/app runs on. In poco "
"communicating with game/app is under a connection with the device. This "
"device connection is handled by `Airtest device abstraction`_ (take "
"Android as example)."
msgstr ""
"``Device`` 是Airtest中的抽象对象，也是游戏或app运行的载体。在poco中，和UI交互（例如点击）就是通过Device对象的。见"
" `Airtest device abstraction`_ 查看Device相关的API。"

#: ../../source/doc/poco_drivers.rst:51
msgid "There are 2 ways to connect to the device."
msgstr "两种方式与设备进行连接"

#: ../../source/doc/poco_drivers.rst:53
msgid "Call function `airtest.core.api.connect_device`_."
msgstr "直接调用 `airtest.core.api.connect_device`_ "

#: ../../source/doc/poco_drivers.rst:54
msgid ""
"Initialize Device instance according to platform "
"(`android`_/`windows`_/`ios`_) then pass the device instance to Poco "
"constructor according to different poco drivers."
msgstr ""
"根据平台实例化不同的Device实例 (`android`_/`windows`_/`ios`_) ，然后将这个实例传入对应的poco driver构造函数中。"
"具体请见每个poco driver的构造函数API文档。"

